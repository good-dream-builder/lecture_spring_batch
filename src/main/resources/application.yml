server:
  port: 8080

spring:
  sql:
    init:
      mode: always
      continue-on-error: true
      data-locations: classpath:sql/*
      schema-locations: classpath:sql/*

  batch:
    jdbc:
      initialize-schema: always

  datasource:
    driver-class-name: org.postgresql.Driver  # PostgreSQL ?????? ???? ??? ??
    url: jdbc:postgresql://127.0.0.1:5432/lec  # ?????? ?? URL (PostgreSQL)
    username: postgres  # ?????? ?? ??? ??
    password: 1  # ?????? ?? ????
    hikari:
      maximum-pool-size: 10  # HikariCP ??? ? ?? ??
      minimum-idle: 2  # ??? ? ?? ?? ??? ?
      max-lifetime: 1800000  # ??? ?? ?? ?? (30?)
      idle-timeout: 600000  # Idle ???? ???? ??? ???? ?? (10?)
      connection-timeout: 30000  # ???? ????? ?? ?? ?? (30?)

# JPA ??
  jpa:
    database: postgresql  # ?? ?? ?????? ??(PostgreSQL)
    database-platform: org.hibernate.dialect.PostgreSQLDialect  # PostgreSQL? ?? Hibernate Dialect ??
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect  # PostgreSQL? ?? Hibernate Dialect ???
        show_sql: true  # SQL ??? ??? ??
        format_sql: true  # ???? SQL ??? ?? ?? ???
        jdbc:
          time_zone: Asia/Seoul
    hibernate:
      ddl-auto: update  # JPA? ?????? ???? ???? ????
    open-in-view: false  # View?? JPA ??? ???? ?? (?? ??)

# MyBatis ??
mybatis:
  type-aliases-package: com.songko.jdlapi.repository.mybatis  # MyBatis?? ??? ?? ?? ??? ??
  mapper-locations: classpath:mappers/**/*.xml  # MyBatis ?? ?? ??

# ?? ??
logging:
  level:
    org.springframework:
      web: DEBUG  # Spring ? ?? ?? ?? ?? (??? ??)
    org.hibernate.type.descriptor.sql: TRACE  # Hibernate SQL ?? ???? ?? ???? ?? ???
    lets.songko:
      lecture_spring_batch: DEBUG  # com.songko.jdlapi ???? ?? ??? ?? ???

springdoc:
  api-docs:
    enabled: true
    path: /v1/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html